{"version":3,"sources":["Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","App.module.css","Components/Form/Form.module.css","Components/Form/Form.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","id","uniqId","uuidv4","handleClick","event","target","value","setState","handleSubmit","preventDefault","props","submitMethod","resetState","className","s","Container","onSubmit","this","Label","htmlFor","Input","type","pattern","title","required","onChange","Button","Component","Contacts","contacts","deleteFunction","map","contact","List","onClick","Filter","App","filter","getSubmitData","data","find","toLowerCase","toast","error","prevState","changeFilterValue","getVisibleContacts","includes","handelDelete","visibleContacts","Title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c522d1ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Contacts_List__2V3YO\",\"Button\":\"Contacts_Button__3WuIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__1q_sH\",\"Input\":\"Filter_Input__2MQXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"App_Title__2qxNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Form_Container__2LBkn\",\"Label\":\"Form_Label__1q0Y-\",\"Input\":\"Form_Input__29dvv\",\"Button\":\"Form_Button__Zkrc7\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\n\nexport class Form extends Component {\n  static propTypes = {\n    submitMethod: PropTypes.func.isRequired,\n  };\n  state = { name: '', number: '', id: '' };\n\n  uniqId = uuidv4();\n\n  handleClick = event => {\n    const { value, name, id } = event.target;\n    this.setState({ [name]: value, id: id });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.submitMethod(this.state);\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({ name: '', number: '', id: '' });\n  };\n\n  render() {\n    return (\n      <div className={s.Container}>\n        <form className={s.Form} onSubmit={this.handleSubmit}>\n          <label className={s.Label} htmlFor={this.uniqId}>\n            Name\n            <input\n              className={s.Input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleClick}\n              id={uuidv4()}\n            />\n          </label>\n\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              className={s.Input}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleClick}\n              value={this.state.number}\n              id={uuidv4()}\n            />\n          </label>\n          <button type=\"submit\" className={s.Button}>\n            Отправить\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nexport const Contacts = ({ contacts, deleteFunction }) => {\n  return (\n    <div>\n      <ul>\n        {contacts.map(contact => {\n          return (\n            <li className={s.List} key={contact.id}>\n              {contact.name}: {contact.number}\n              <button\n                className={s.Button}\n                type=\"button\"\n                onClick={() => {\n                  deleteFunction(contact.id);\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteFunction: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.Label}>\n      Фильтр по имени:\n      <input\n        className={s.Input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Form } from './Components/Form/Form';\nimport { Contacts } from './Components/Contacts/Contacts';\nimport { Filter } from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  getSubmitData = data => {\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n      )\n    ) {\n      toast.error('This name is also here!');\n      return;\n    }\n\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, data] };\n    });\n  };\n\n  changeFilterValue = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  handelDelete = data => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== data),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1 className={s.Title}>PhoneBook</h1>\n        <Form submitMethod={this.getSubmitData} />\n        <h2 className={s.Title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilterValue} />\n        <Contacts\n          contacts={visibleContacts}\n          deleteFunction={this.handelDelete}\n        />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}